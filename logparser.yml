name: Pavlo_polyak_25021982
env:
 PACK_NAME: "docker ${{ github.sha }}"
 APP_NAME: "Docker"
 
on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  my_ubuntu:
    runs-on: ubuntu-latest 
    steps:
    - name: print msg
      run: echo "what is going on"
      
    - name: exec few cmd
      run: |
       echo "hallo"
       echo "${{ env.PACK_NAME}}"
    - name: print dir
      run: ls
   
    - name: git clone
      uses: actions/checkout@v1
      
    - name: print dir
      run: ls
      
       
  my_python:
    runs-on: ubuntu-latest
    needs: [my_ubuntu]
    env:
      VAR1: "continius integration"
      VAR2: "continius deploy"
    steps:
    - name: print msg
      run: echo "devops rulezz" 
      
    - name: exec few cmd
      run: |
       echo "hallo"
       echo "${{ env.VAR1}}"
       echo "${{ env.VAR2}}"
      env:
        LOCAL_VAR: "Supper local variable"
  my_nginx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - 'pypy-3.6' # the latest available version of PyPy that supports Python 3.6
#         - 'pypy-3.7' # the latest available version of PyPy that supports Python 3.7
#         - 'pypy-3.7-v7.3.3' # Python 3.7 and PyPy 7.3.3
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        pip install paramiko
        pip install pandas
        pip install sqlalchemy
        pip install openpyxl
        python sql_orm.py
        
name: CI-CD-Pipeline-to-AWS-ElasticBeastalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "adv-it-flask-application-packages"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-west-2"

on: 
  push:
    branches: 
      - master

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
    - name: Git clone our repo
      uses: actions/checkout@v1
       
    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
        
    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
    
    - name: Print Happy Message for CI finish
      run : echo "CI Pipeline part Finished successfully!"


  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
    
    - name: Create new ElasticBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CoimmitSHA-${{ github.sha }}"
       
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
      
    - name: Print Happy Message for CD finish
      run : echo "CD Pipeline part Finished successfully!"
